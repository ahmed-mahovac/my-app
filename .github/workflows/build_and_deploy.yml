name: Build and Deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: |
          cd backend
          composer validate --strict

      - name: Build Docker images
        run: |
          docker build . --file ./backend/Dockerfile --tag ghcr.io/${{ github.repository_owner }}/my-app-backend:latest
          docker build . --file ./frontend/Dockerfile --tag ghcr.io/${{ github.repository_owner }}/my-app-frontend:latest

      - name: Authenticate with GitHub Container Registry
        run: docker login ghcr.io -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password ${{ secrets.DOCKER_REGISTRY_SECRET }}

      - name: Push Docker images to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/my-app-backend:latest
          docker push ghcr.io/${{ github.repository_owner }}/my-app-frontend:latest

  deploy:
    runs-on: self-hosted

    env:
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

    needs: build

    steps:
      - name: Copy Docker Compose file
        uses: actions/checkout@v3

      - name: Authenticate with GitHub Container Registry
        run: docker login ghcr.io -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password ${{ secrets.DOCKER_REGISTRY_SECRET }}

      - name: stop running containers # if they are already running
        run: docker-compose down

      - name: pull latest images
        run: docker-compose pull

      - name: run docker compose
        run: docker-compose up -d
